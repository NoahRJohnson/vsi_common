version: 2.1

# -----
# generic yaml anchors (reusable by multiple projects)
# -----
x-stuff:
  # container configuration & update
  container_config: &container_config
    working_directory: ~/repo
    shell: /bin/bash -eu
    docker:
      - image: vsiri/circleci:bash-compose-lfs

commands:
  submodule_checkout:
    description: Checks out submodules
    steps:
      - run:
          name: Checkout submodules
          command: |
            git submodule sync
            git submodule update --recursive --init


jobs:
  run_tests:
    <<: *container_config

    steps:
      - checkout
      - submodule_checkout
      - setup_remote_docker

      - run:
          name: Install test dependencies and smuggle vsi to host
          command: |
            apk add --no-cache perl jq
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            . setup.env
            just build recipes
            tar c . | docker run -i --rm -v /root/repo:/src -w /src alpine:3.8 tar x

      - run:
          name: Run unit tests
          environment:
            LDCONFIG: /usr/glibc-compat/sbin/ldconfig
          command: |
            . setup.env
            just test

      - run:
          name: Run integration tests
          command: |
            . setup.env
            just test int

  compile_docs:
    <<: *container_config
    steps:
      - checkout
      - submodule_checkout
      - setup_remote_docker
      - run:
          name: Generate docs
          command: |
            . setup.env
            tar c . | docker run -i --rm -v /root/repo:/src -w /src alpine:3.8 tar x
            SPHINXOPTS='-W' just sphinx build compile -n --all
            docker run --rm -v /root/repo:/src -w /src alpine:3.8 tar c ./docs/_build/html | tar x

      - persist_to_workspace:
          root: docs/_build
          paths: html


  deploy_docs:
    <<: *container_config
    steps:
      - checkout
      - attach_workspace:
          at: /docs
      - run:
          name: Checkout gh-pages and update
          command: |
            git checkout gh-pages || git checkout --orphan gh-pages
            git reset --hard # This is important if gh-pages was just created
            mv /docs/html/* ./
            touch .nojekyll

            git add --all
            git config --global user.email "circleci@cirleci.com" > /dev/null 2>&1
            git config --global user.name "CircleCI" > /dev/null 2>&1
            git commit -m "Autobuild documentation [ci skip]"
            git remote set-url origin "https://${GH_NAME}:${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git"
            git push origin gh-pages


# -----
# CircleCI workflows
# -----
workflows:
  vsi_common:
    jobs:
      - run_tests
      - compile_docs
      - deploy_docs:
          requires:
            - compile_docs
          filters:
            branches:
              only:
                - master
