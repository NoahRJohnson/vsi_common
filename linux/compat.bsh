#!/usr/bin/env false bash

if [[ $- != *i* ]]; then
  source_once &> /dev/null && return 0
fi

function load_vsi_compat()
{
  #######
  # Sed #
  #######

  if [ -z "${VSI_SED_COMPAT-}" ]; then
    local VSI_SED_COMPAT
    if [[ ${OSTYPE-} = darwin* ]]; then
      VSI_SED_COMPAT=bsd
    elif [[ $(sed --version) = GNU* ]]; then
      VSI_SED_COMPAT=gnu
    else
      VSI_SED_COMPAT=bsd
    fi
  fi
  # Needed for CentOS 6 running sed 4.1.5
  if [ "${VSI_SED_COMPAT-}" = "gnu" ]; then
    sed_flag_rE='r'
  else
    sed_flag_rE='E'
  fi

  # Handle macos BSD version
  if [[ ${OSTYPE-} = darwin* ]]; then
    sed_flag_i="i ''"
  else
    sed_flag_i='i'
  fi

  ########
  # Bash #
  ########

  #**
  # The following variables will help cope with the difference in bash versions, as seamlessly as possible.
  #
  # .. variable: bash_declare_array_quote
  #
  # In bash version 4.3 and older, ``declare -p`` of an array adds an extra ``'`` around the array. This variable stores the state of that variable
  #
  # :Value: * ``(null)`` - Bash 4.4 or newer
  #         * ``'`` - Bash 4.3 or older
  #**
  if [ "${BASH_VERSINFO[0]}${BASH_VERSINFO[1]}" -gt "43" ]; then
    bash_declare_array_quote=""
  else
    bash_declare_array_quote="'"
  fi
}

# The purpose of this file is to set all these flag. Make it a function to help
# encapsulate in new_just
load_vsi_compat