#!/usr/bin/env bash

if [[ $- != *i* ]]; then
  source_once &> /dev/null && return 0
fi

#*# linux/parser

#**
# ======
# Parser
# ======
#
# .. default-domain:: bash
#
# .. file:: parser.bsh
#
# Functions to parse and/or validate common strings like URLs, etc.
#**

#**
# .. function:: parse_url
#
# Parse a URL
#
# Parse a URL into its various parts: scheme, authority, user, host, port, rpath, query, fragment. Parsing URLs 100% correctly is HARD. This is not that solution.
#
# :Arguments: ``$1`` - URL
#
# .. rubric:: Example
#
# .. code-block:: bash
#
# parse_url https://visionsystemsinc.github.io:443/vsi_common/just/quickstart_user.html?highlight=J.U.S.T#what-is-j-u-s-t
#
# :Output:
#   ``just_url_parsed_scheme`` - e.g., https
#   ``just_url_parsed_authority`` - e.g., visionsystemsinc.github.io:443
#   ``just_url_parsed_host`` - e.g., visionsystemsinc.github.io
#   ``just_url_parsed_port`` - e.g., 443
#   ``just_url_parsed_rpath`` - e.g., vsi_common/just/quickstart_user.html
#   ``just_url_parsed_query`` - e.g., highlight=J.U.S.T
#   ``just_url_parsed_fragment`` - e.g., #what-is-j-u-s-t
#
# .. note::
#    From https://stackoverflow.com/a/45977232
#**

function parse_url()
{
  # Following regex is based on https://tools.ietf.org/html/rfc3986#appendix-B
  # with additional sub-expressions to split authority into userinfo, host and
  # port
  local URI_REGEX='^(([^:/?#]+):)?(//((([^:/?#]+)@)?([^:/?#]+)(:([0-9]+))?))?(/([^?#]*))(\?([^#]*))?(#(.*))?'
  #                  ||            |  |||            |         | |            | |        |  |        | |
  #                  |2 scheme     |  ||6 userinfo   7 host    | 9 port       | 11 rpath |  13 query | 15 fragment
  #                  1 scheme:     |  |5 userinfo@             8 :...         10 path    12 ?...     14 #...
  #                                |  4 authority
  #                                3 //...

  # Note: No quotes around URI_REGEX
  if [[ "${1}" =~ ${URI_REGEX} ]]; then
    just_url_parsed_scheme="${BASH_REMATCH[2]}"
    just_url_parsed_authority="${BASH_REMATCH[4]}"
    #just_url_parsed_user="${BASH_REMATCH[6]}"
    just_url_parsed_host="${BASH_REMATCH[7]}"
    just_url_parsed_port="${BASH_REMATCH[9]}"
    just_url_parsed_rpath="${BASH_REMATCH[11]}"
    just_url_parsed_query="${BASH_REMATCH[13]}"
    just_url_parsed_fragment="${BASH_REMATCH[15]}"
    return 0
  fi
  return 1 # URL did not parse
}
