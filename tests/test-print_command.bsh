#!/usr/bin/env bash

. "$(dirname "${BASH_SOURCE[0]}")/testlib.bsh"
. "$(dirname "${BASH_SOURCE[0]}")/test_utils.bsh"

VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"

function common_test()
{
  [ "$(type -t print_command)" = "$1" ]

  check_str "$(print_command)" \
            ""
  check_str "$(print_command foo %s bar)" \
            "foo %s bar"
  check_str "$(print_command -n test -e foobar)" \
            "-n test -e foobar"
  check_str "$(print_command 'azAZ0-9_.:/=@%^,+-')" \
            "azAZ0-9_.:/=@%^,+-"
  check_str "$(print_command '!' \* \$ \# \@ \(\) \{\} \[\] \;)" \
            "'!' '*' '$' '#' @ '()' '{}' '[]' ';'"
  check_str "$(print_command echo test "this'this" "" "f o  o")" \
            "echo test 'this'\''this' '' 'f o  o'"
}

begin_test "print_command CLI"
(
  setup_test
  common_test file
)
end_test

begin_test "print_command"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/print_command"
  common_test function
)
end_test

begin_test "print_command_env"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/print_command"

  export A=3
  export B=2
  print_command_save_env

  check_str "$(print_command_env foo)" \
            "foo"
  check_str "$(print_command_env foo "b a  r")" \
            "foo 'b a  r'"
  check_str "$(A=3 print_command_env foo)" \
            "foo"
  check_str "$(B=3 print_command_env foo)" \
            "B=3 foo"
  check_str "$(C="b a  r" print_command_env foo)" \
            "C='b a  r' foo"
  check_str "$(unset A; print_command_env foo)" \
            "(unset A; foo)"
  check_str "$(export B="f  o o"; unset A; D=15 C="b a  r" print_command_env foo)" \
            "(unset A; B='f  o o' C='b a  r' D=15 foo)"

  check_str "$(export C='!*$#@(){}[];'; print_command_env foo)" \
            "C='!*\$#@(){}[];' foo"
  check_str "$(export D="this'this" E="" F="f o  o"; print_command_env bar)" \
            "D='this'\''this' E='' F='f o  o' bar"

  # Test child process
  export -f print_command_env
  export -f quote_escape

  check_str "$(B=15 bash -c "print_command_env foo bar")" \
            "B=15 foo bar"

  # Test cd
  check_str "$(unset A; B=15 C="b a  r" bash -c "cd "${TRASHDIR}"; print_command_env foo bar")" \
            "(cd ${TRASHDIR}; unset A; B=15 C='b a  r' foo bar)"
)
end_test

begin_test "print_command_env locally shadowed variable"
(
  setup_test
  . "${VSI_COMMON_DIR}/linux/print_command"

  export x=15
  print_command_save_env
  function foo()
  {
    local x

    value="$(print_command_env hi)"

    if [ "${BASH_VERSINFO[0]}" = "4" -a "${BASH_VERSINFO[1]}" -lt "3" ] || [ "${BASH_VERSINFO[0]}" -lt "4" ]; then
      check_str "${value}" "(unset x; hi)"
    else
      check_str "${value}" "hi"
    fi
  }
  foo
)
end_test