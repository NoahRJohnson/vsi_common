version: "2.3"

services:
  wine: &wine
    build:
      context: docker/tests
      dockerfile: wine.Dockerfile
    image: ${VSI_COMMON_DOCKER_REPO}:wine_test
    cap_add:
      - SYS_PTRACE
    working_dir: /vsi
    environment: &wine_environment
      USER_ID: "${VSI_COMMON_UID-1000}"
      JUST_IS_TTY: "1"
      WINEDEBUG: "fixme-all,err-winediag,err-menubuilder"
    volumes:
      - &wine_home_volume
        type: volume
        source: wine_home
        target: /home/.user_wine
      - &vsi_common_volume
        type: bind
        source: .
        target: /vsi
        read_only: true
    command: -c "cd /z/vsi; bash -l"
  wine_gui:
    <<: *wine
    environment:
      <<: *wine_environment
      DISPLAY:
    volumes:
      - *wine_home_volume
      - *vsi_common_volume
      - type: bind
        read_only: true
        target: /tmp/.X11-unix
        source: /tmp/.X11-unix
    command: []

  bash_test:
    build:
      context: docker/tests
      dockerfile: bash_test.Dockerfile
      args:
        BASH_VERSION: ${VSI_COMMON_BASH_TEST_VERSION}
    image: ${VSI_COMMON_DOCKER_REPO}:bash_test_${VSI_COMMON_BASH_TEST_VERSION}
    environment:
      DOCKER_UID: ${VSI_COMMON_UID-1000}
      DOCKER_GIDS: ${VSI_COMMON_GIDS-1000}
      DOCKER_GROUP_NAMES: ${VSI_COMMON_GROUP_NAMES-user}
      DOCKER_USERNAME: user
      TESTLIB_PARALLEL:
      DOCKER_HOST:
    volumes:
      - <<: *vsi_common_volume

  python2: &python-anchor
    build:
      context: docker/tests/
      dockerfile: python2.Dockerfile
    image: ${VSI_COMMON_DOCKER_REPO}:python2_test
    command: |
      bash -c '
        cd /vsi/python
        pipenv run python2 -B -m unittest discover -s "/vsi/python/vsi/test"'
    # environment:
    #   - DOCKER_UID=${VSI_COMMON_UID-1000}
    #   - DOCKER_GIDS=${VSI_COMMON_GIDS-1000}
    #   - DOCKER_GROUP_NAMES=user
    #   - DOCKER_USERNAME=user
    volumes:
      - type: bind
        source: ${VSI_COMMON_DIR}
        target: /vsi
        read_only: true
      - type: volume
        source: venv2
        target: /venv
  python3:
    build:
      context: docker/tests/
      dockerfile: python3.Dockerfile
    image: ${VSI_COMMON_DOCKER_REPO}:python3_test
    volumes:
      - type: bind
        source: ${VSI_COMMON_DIR}
        target: /vsi
        read_only: true
      - type: volume
        source: venv3
        target: /venv
    command: |
      bash -c '
        cd /vsi/python
        pipenv run python3 -B -m unittest discover -s "/vsi/python/vsi/test"'

volumes:
  wine_home:
  venv2:
    labels:
      com.vsi.just.clean_setup: --wrap Docker-compose run python2 true
  venv3:
    labels:
      com.vsi.just.clean_setup: --wrap Docker-compose run python3 true